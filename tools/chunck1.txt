static BOOL WINAPI end(DWORD dwCtrlType)
{
	int key;

	switch (dwCtrlType)
	{
		case CTRL_C_EVENT: // Ctrl+C
			std::cout << "\nPress any key to continue...\n";
			key = std::cin.get();
			if (key != 10)
			{
				/* we need to do something here; input is broken */
				exit(0);
			}
			else
			{
				exit(0);
			}
			break;
		case CTRL_BREAK_EVENT: // Ctrl+Break
			break;
		case CTRL_CLOSE_EVENT: // Closing the console window
			break;
		case CTRL_LOGOFF_EVENT: // User logs off. Passed only to services!
			break;
		case CTRL_SHUTDOWN_EVENT: // System is shutting down. Passed only to services!
			break;
	}

	// Return TRUE if handled this message, further handler functions won't be called.
	// Return FALSE to pass this message to further handlers until default handler calls ExitProcess().
	return FALSE;
}

int main(int argc, char **argv)
{
	std::cout << "\n\n";

	bool arg = false;
	bool alreadyarg = false;

	if (argc > 1)
	{
		startup_command = argv[2];
		arg = true;
	}

	/* Catch CTRL-C */
	SetConsoleCtrlHandler(end, TRUE);